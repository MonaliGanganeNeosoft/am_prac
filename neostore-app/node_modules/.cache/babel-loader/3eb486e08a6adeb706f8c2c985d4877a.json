{"ast":null,"code":"var _jsxFileName = \"D:\\\\am\\\\neostore-app\\\\src\\\\Components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Container, Button } from \"react-bootstrap\";\nimport bcrypt from \"bcryptjs\";\nimport { addUser } from \"./../configFiles/services\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst regForName = RegExp(/^[A-Za-z]{3,10}$/);\nconst regForUName = RegExp(/^[A-Za-z]{2,12}$/);\nconst regForEmail = RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\nconst regForPass = RegExp(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/);\nconst RegForMobile = RegExp(\"^((\\\\+91-?)|0)?[0-9]{10}$\");\n\nfunction Register() {\n  _s();\n\n  const [data, setData] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\",\n    photo: \"\"\n  });\n  const [password, setpassword] = useState(\"password\");\n  const [passwords, setpasswords] = useState(\"password\");\n  const [select, setSelect] = useState();\n  const [state, setState] = useState({\n    flag: 0\n  });\n  const [Errors, setError] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    password: \"\",\n    phoneNumber: \"\",\n    confirmPass: \"\"\n  });\n\n  const handleSocialLogin = user => {\n    console.log(user);\n  };\n\n  const handleRegisterData = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case \"fname\":\n        Errors.fname = regForName.test(value) ? \"\" : \"name should bet 2 to 20 letters\";\n        break;\n\n      case \"lname\":\n        Errors.lname = regForName.test(value) ? \"\" : \"lname should be 2 to 10 letters\";\n        break;\n\n      case \"phoneNumber\":\n        Errors.phoneNumber = RegForMobile.test(value) ? \"\" : \"phon no should be valid\";\n        break;\n\n      case \"email\":\n        Errors.email = regForEmail.test(value) ? \"\" : \"invalid email\";\n        break;\n\n      case \"password\":\n        Errors.password = regForPass.test(value) ? \"\" : \"psd must be 6 to 16 char\";\n        break;\n\n      case \"confirmPass\":\n        Errors.confirmPass = data.password == value ? \"\" : \"psd and confirm should match\";\n    }\n\n    setSelect({\n      Errors,\n      [name]: value\n    }, () => {\n      console.log(Errors);\n    });\n    setData({ ...data,\n      [name]: value\n    });\n    console.log(data);\n  };\n\n  const submitRegisterData = () => {};\n\n  const verifyEmail = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-5 border\",\n      style: {\n        width: \"60%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register to neostore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [Errors.fname.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.fname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"first name\",\n            className: \"py-2\",\n            name: \"fname\",\n            onChange: handleRegisterData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), Errors.lname.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.lname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"last name\",\n            className: \"py-2\",\n            name: \"lname\",\n            onChange: handleRegisterData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), Errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"email address\",\n            className: \"py-2\",\n            name: \"email\",\n            onChange: handleRegisterData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), Errors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: password,\n            placeholder: \"password\",\n            onChange: handleRegisterData,\n            name: \"password\",\n            reduired: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), Errors.lname.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.confirmPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), Errors.confirmPass.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.confirmPass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: password,\n            placeholder: \"confirm password\",\n            onChange: handleRegisterData,\n            name: \"confirmPass\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), Errors.phoneNumber.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: Errors.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"mobile number\",\n            className: \"py-2\",\n            name: \"phoneNumber\",\n            onChange: handleRegisterData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"gender\",\n            id: \"gens\",\n            onChange: handleRegisterData,\n            value: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            for: \"flexRadioDefault1\",\n            value: \"Female\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"gender\",\n            id: \"flexRadioDefault2\",\n            onChange: handleRegisterData,\n            value: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            for: \"flexRadioDefault2\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"rvW569O0hD+44IXzHfq/oIZ79BU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/am/neostore-app/src/Components/Register.js"],"names":["React","useState","Form","Container","Button","bcrypt","addUser","useNavigate","regForName","RegExp","regForUName","regForEmail","regForPass","RegForMobile","Register","data","setData","fname","lname","email","password","confirmPass","photo","setpassword","passwords","setpasswords","select","setSelect","state","setState","flag","Errors","setError","phoneNumber","handleSocialLogin","user","console","log","handleRegisterData","event","name","value","target","test","submitRegisterData","verifyEmail","width","length","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Container, Button } from \"react-bootstrap\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { addUser } from \"./../configFiles/services\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst regForName = RegExp(/^[A-Za-z]{3,10}$/);\r\nconst regForUName = RegExp(/^[A-Za-z]{2,12}$/);\r\nconst regForEmail = RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\nconst regForPass = RegExp(\r\n  /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/\r\n);\r\nconst RegForMobile = RegExp(\"^((\\\\+91-?)|0)?[0-9]{10}$\");\r\nfunction Register() {\r\n  const [data, setData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPass: \"\",\r\n    photo: \"\",\r\n  });\r\n  const [password, setpassword] = useState(\"password\");\r\n  const [passwords, setpasswords] = useState(\"password\");\r\n  const [select, setSelect] = useState();\r\n  const [state, setState] = useState({ flag: 0 });\r\n  const [Errors, setError] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phoneNumber: \"\",\r\n    confirmPass: \"\",\r\n  });\r\n\r\n  const handleSocialLogin = (user) => {\r\n    console.log(user);\r\n  };\r\n  const handleRegisterData = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case \"fname\":\r\n        Errors.fname = regForName.test(value)\r\n          ? \"\"\r\n          : \"name should bet 2 to 20 letters\";\r\n        break;\r\n      case \"lname\":\r\n        Errors.lname = regForName.test(value)\r\n          ? \"\"\r\n          : \"lname should be 2 to 10 letters\";\r\n        break;\r\n      case \"phoneNumber\":\r\n        Errors.phoneNumber = RegForMobile.test(value)\r\n          ? \"\"\r\n          : \"phon no should be valid\";\r\n        break;\r\n      case \"email\":\r\n        Errors.email = regForEmail.test(value) ? \"\" : \"invalid email\";\r\n        break;\r\n      case \"password\":\r\n        Errors.password = regForPass.test(value)\r\n          ? \"\"\r\n          : \"psd must be 6 to 16 char\";\r\n        break;\r\n      case \"confirmPass\":\r\n        Errors.confirmPass =\r\n          data.password == value ? \"\" : \"psd and confirm should match\";\r\n    }\r\n    setSelect({ Errors, [name]: value }, () => {\r\n      console.log(Errors);\r\n    });\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n  };\r\n  const submitRegisterData = () => {};\r\n  const verifyEmail = () => {};\r\n  return (\r\n    <>\r\n      <Container className=\"my-5 border\" style={{ width: \"60%\" }}>\r\n        <h1>Register to neostore</h1>\r\n        <Form>\r\n          {Errors.fname.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.fname}</span>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"first name\"\r\n              className=\"py-2\"\r\n              name=\"fname\"\r\n              onChange={handleRegisterData}\r\n            />\r\n          </Form.Group>\r\n\r\n          {Errors.lname.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.lname}</span>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"last name\"\r\n              className=\"py-2\"\r\n              name=\"lname\"\r\n              onChange={handleRegisterData}\r\n            />\r\n          </Form.Group>\r\n          {Errors.email.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.email}</span>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"email address\"\r\n              className=\"py-2\"\r\n              name=\"email\"\r\n              onChange={handleRegisterData}\r\n            />\r\n          </Form.Group>\r\n          {Errors.password.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.password}</span>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type={password}\r\n              placeholder=\"password\"\r\n              onChange={handleRegisterData}\r\n              name=\"password\"\r\n              reduired\r\n            />\r\n          </Form.Group>\r\n\r\n          {Errors.lname.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.confirmPass}</span>\r\n          )}\r\n          {Errors.confirmPass.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.confirmPass}</span>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Control\r\n              type={password}\r\n              placeholder=\"confirm password\"\r\n              onChange={handleRegisterData}\r\n              name=\"confirmPass\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          {Errors.phoneNumber.length > 0 && (\r\n            <span style={{ color: \"red\" }}>{Errors.phoneNumber}</span>\r\n          )}\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"mobile number\"\r\n              className=\"py-2\"\r\n              name=\"phoneNumber\"\r\n              onChange={handleRegisterData}\r\n            />\r\n          </Form.Group>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              id=\"gens\"\r\n              onChange={handleRegisterData}\r\n              value=\"Female\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              for=\"flexRadioDefault1\"\r\n              value=\"Female\"\r\n            >\r\n              Female\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              id=\"flexRadioDefault2\"\r\n              onChange={handleRegisterData}\r\n              value=\"Male\"\r\n            />\r\n            <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n              Male\r\n            </label>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}